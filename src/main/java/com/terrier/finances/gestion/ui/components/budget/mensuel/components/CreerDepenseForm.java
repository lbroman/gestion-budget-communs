package com.terrier.finances.gestion.ui.components.budget.mensuel.components;

import com.terrier.finances.gestion.model.business.parametrage.CategorieDepense;
import com.terrier.finances.gestion.model.business.parametrage.CompteBancaire;
import com.terrier.finances.gestion.model.enums.EtatLigneDepenseEnum;
import com.terrier.finances.gestion.model.enums.TypeDepenseEnum;
import com.terrier.finances.gestion.ui.components.abstrait.AbstractUIComponent;
import com.terrier.finances.gestion.ui.controler.budget.mensuel.creer.operation.CreerDepenseController;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.CheckBox;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.TextField;

/**
 * Formulaire de création d'une dépense
 * @author vzwingma
 *
 */
public class CreerDepenseForm extends AbstractUIComponent<CreerDepenseController> {


	@AutoGenerated
	private HorizontalLayout mainLayout;

	@AutoGenerated
	private GridLayout gridLayout;

	@AutoGenerated
	private HorizontalLayout horizontalLayout_7;

	@AutoGenerated
	private Button buttonValiderContinuer;

	@AutoGenerated
	private Button buttonValider;

	@AutoGenerated
	private HorizontalLayout horizontalLayout_6;

	@AutoGenerated
	private CheckBox checkBoxPeriodique;

	@AutoGenerated
	private Label labelPeriode;

	@AutoGenerated
	private HorizontalLayout horizontalLayout_5;

	@AutoGenerated
	private ComboBox<EtatLigneDepenseEnum> comboBoxEtat;

	@AutoGenerated
	private Label labelEtat;

	@AutoGenerated
	private HorizontalLayout horizontalLayout_4;

	@AutoGenerated
	private Label label_3;

	@AutoGenerated
	private TextField textFieldValeur;

	@AutoGenerated
	private ComboBox<TypeDepenseEnum> comboBoxType;

	@AutoGenerated
	private Label label_4;

	@AutoGenerated
	private HorizontalLayout horizontalLayout_3;

	@AutoGenerated
	private ComboBox<String> textFieldDescription;

	@AutoGenerated
	private Label label_2;

	@AutoGenerated
	private HorizontalLayout horizontalLayout_8;

	@AutoGenerated
	private ComboBox<CompteBancaire> comboboxComptes;

	@AutoGenerated
	private Label label_5;

	@AutoGenerated
	private HorizontalLayout horizontalLayout_2;

	@AutoGenerated
	private ComboBox<CategorieDepense> comboBoxSsCategorie;

	@AutoGenerated
	private ComboBox<CategorieDepense> comboBoxCategorie;

	@AutoGenerated
	private Label label_1;

	/**
	 * 
	 */
	private static final long serialVersionUID = 7011560205719985290L;


	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public CreerDepenseForm() {
		buildMainLayout();
		setCompositionRoot(mainLayout);
		// Start controleur
		startControleur();
	}

	

	
	/**
	 * @return the listSelectEtat
	 */
	public ComboBox<EtatLigneDepenseEnum> getListSelectEtat() {
		return comboBoxEtat;
	}


	/**
	 * @return the textFieldValeur
	 */
	public TextField getTextFieldValeur() {
		return textFieldValeur;
	}


	/**
	 * @return the comboBoxType
	 */
	public ComboBox<TypeDepenseEnum> getComboboxType() {
		return comboBoxType;
	}


	/**
	 * @return the textFieldDescription
	 */
	public ComboBox<String> getTextFieldDescription() {
		return textFieldDescription;
	}


	/**
	 * @return the label_5
	 */
	public Label getLabelCompte() {
		return label_5;
	}




	/**
	 * @return the horizontalLayout_8
	 */
	public HorizontalLayout getLayoutCompte() {
		return horizontalLayout_8;
	}




	/**
	 * @return the comboBoxSsCategorie
	 */
	public ComboBox<CategorieDepense> getComboBoxSsCategorie() {
		return comboBoxSsCategorie;
	}


	/**
	 * @return the textFieldCategorie
	 */
	public ComboBox<CategorieDepense> getComboBoxCategorie() {
		return comboBoxCategorie;
	}


	/**
	 * @return the checkBoxPeriodique
	 */
	public CheckBox getCheckBoxPeriodique() {
		return checkBoxPeriodique;
	}


	/**
	 * @return the buttonValider
	 */
	public Button getButtonValider() {
		return buttonValider;
	}

	



	/**
	 * @return the listSelectComptes
	 */
	public ComboBox<CompteBancaire> getComboboxComptes() {
		return comboboxComptes;
	}




	/**
	 * @return the buttonValiderContinuer
	 */
	public Button getButtonValiderContinuer() {
		return buttonValiderContinuer;
	}




	/* (non-Javadoc)
	 * @see com.terrier.finances.gestion.ui.components.AbstractUIComponent#getControleur()
	 */
	@Override
	public CreerDepenseController createControleur() {
		return new CreerDepenseController(this);
	}




	@AutoGenerated
	private HorizontalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new HorizontalLayout();
		mainLayout.setSizeFull();
		mainLayout.setMargin(false);
		
		// top-level component properties
		setSizeFull();
		
		// gridLayout
		gridLayout = buildGridLayout();
		mainLayout.addComponent(gridLayout);
		mainLayout.setExpandRatio(gridLayout, 1.0f);
		mainLayout.setComponentAlignment(gridLayout, new Alignment(48));
		
		return mainLayout;
	}




	@AutoGenerated
	private GridLayout buildGridLayout() {
		// common part: create layout
		gridLayout = new GridLayout();
		gridLayout.setWidth("500px");
		gridLayout.setHeight("270px");
		gridLayout.setMargin(false);
		gridLayout.setColumns(2);
		gridLayout.setRows(7);
		
		// label_1
		label_1 = new Label();
		label_1.setSizeUndefined();
		label_1.setValue("Catégorie");
		gridLayout.addComponent(label_1, 0, 0);
		gridLayout.setComponentAlignment(label_1, new Alignment(33));
		
		// horizontalLayout_2
		horizontalLayout_2 = buildHorizontalLayout_2();
		gridLayout.addComponent(horizontalLayout_2, 1, 0);
		gridLayout.setComponentAlignment(horizontalLayout_2, new Alignment(48));
		
		// label_5
		label_5 = new Label();
		label_5.setSizeUndefined();
		label_5.setValue("Compte");
		gridLayout.addComponent(label_5, 0, 1);
		gridLayout.setComponentAlignment(label_5, new Alignment(33));
		
		// horizontalLayout_8
		horizontalLayout_8 = buildHorizontalLayout_8();
		gridLayout.addComponent(horizontalLayout_8, 1, 1);
		gridLayout.setComponentAlignment(horizontalLayout_8, new Alignment(48));
		
		// label_2
		label_2 = new Label();
		label_2.setSizeFull();
		label_2.setHeightUndefined();
		label_2.setValue("Description");
		gridLayout.addComponent(label_2, 0, 2);
		gridLayout.setComponentAlignment(label_2, new Alignment(33));
		
		// horizontalLayout_3
		horizontalLayout_3 = buildHorizontalLayout_3();
		gridLayout.addComponent(horizontalLayout_3, 1, 2);
		gridLayout.setComponentAlignment(horizontalLayout_3, new Alignment(34));
		
		// label_4
		label_4 = new Label();
		label_4.setSizeUndefined();
		label_4.setValue("Valeur");
		gridLayout.addComponent(label_4, 0, 3);
		gridLayout.setComponentAlignment(label_4, new Alignment(33));
		
		// horizontalLayout_4
		horizontalLayout_4 = buildHorizontalLayout_4();
		gridLayout.addComponent(horizontalLayout_4, 1, 3);
		gridLayout.setComponentAlignment(horizontalLayout_4, new Alignment(48));
		
		// labelEtat
		labelEtat = new Label();
		labelEtat.setSizeUndefined();
		labelEtat.setValue("Etat");
		gridLayout.addComponent(labelEtat, 0, 4);
		gridLayout.setComponentAlignment(labelEtat, new Alignment(33));
		
		// horizontalLayout_5
		horizontalLayout_5 = buildHorizontalLayout_5();
		gridLayout.addComponent(horizontalLayout_5, 1, 4);
		gridLayout.setComponentAlignment(horizontalLayout_5, new Alignment(48));
		
		// labelPeriode
		labelPeriode = new Label();
		labelPeriode.setWidth("120px");
		labelPeriode.setHeight("-1px");
		labelPeriode.setValue("Dépense mensuelle");
		gridLayout.addComponent(labelPeriode, 0, 5);
		gridLayout.setComponentAlignment(labelPeriode, new Alignment(33));
		
		// horizontalLayout_6
		horizontalLayout_6 = buildHorizontalLayout_6();
		gridLayout.addComponent(horizontalLayout_6, 1, 5);
		gridLayout.setComponentAlignment(horizontalLayout_6, new Alignment(33));
		
		// horizontalLayout_7
		horizontalLayout_7 = buildHorizontalLayout_7();
		gridLayout.addComponent(horizontalLayout_7, 1, 6);
		gridLayout.setComponentAlignment(horizontalLayout_7, new Alignment(33));
		
		return gridLayout;
	}




	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_2() {
		// common part: create layout
		horizontalLayout_2 = new HorizontalLayout();
		horizontalLayout_2.setSizeFull();
		horizontalLayout_2.setHeight("40px");
		horizontalLayout_2.setMargin(false);
		
		// comboBoxCategorie
		comboBoxCategorie = new ComboBox<CategorieDepense>();
		comboBoxCategorie.setSizeFull();
		comboBoxCategorie.setHeight("26px");
		comboBoxCategorie.setRequiredIndicatorVisible(true);
		horizontalLayout_2.addComponent(comboBoxCategorie);
		horizontalLayout_2.setExpandRatio(comboBoxCategorie, 1.0f);
		horizontalLayout_2.setComponentAlignment(comboBoxCategorie,
				new Alignment(33));
		
		// comboBoxSsCategorie
		comboBoxSsCategorie = new ComboBox<CategorieDepense>();
		comboBoxSsCategorie.setEnabled(false);
		comboBoxSsCategorie.setSizeFull();
		comboBoxSsCategorie.setHeight("26px");
		comboBoxSsCategorie.setRequiredIndicatorVisible(true);
		horizontalLayout_2.addComponent(comboBoxSsCategorie);
		horizontalLayout_2.setExpandRatio(comboBoxSsCategorie, 1.0f);
		horizontalLayout_2.setComponentAlignment(comboBoxSsCategorie,
				new Alignment(33));
		
		return horizontalLayout_2;
	}




	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_8() {
		// common part: create layout
		horizontalLayout_8 = new HorizontalLayout();
		horizontalLayout_8.setSizeFull();
		horizontalLayout_8.setHeight("40px");
		horizontalLayout_8.setMargin(false);
		
		// listSelectComptes
		comboboxComptes = new ComboBox<CompteBancaire>();
		comboboxComptes.setWidth("183px");
		comboboxComptes.setHeight("-1px");
		comboboxComptes.setRequiredIndicatorVisible(true);
		horizontalLayout_8.addComponent(comboboxComptes);
		horizontalLayout_8.setComponentAlignment(comboboxComptes,
				new Alignment(34));
		
		return horizontalLayout_8;
	}




	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_3() {
		// common part: create layout
		horizontalLayout_3 = new HorizontalLayout();
		horizontalLayout_3.setWidthUndefined();
		horizontalLayout_3.setHeight("40px");
		horizontalLayout_3.setMargin(false);
		
		// textFieldDescription
		textFieldDescription = new ComboBox<String>();
		textFieldDescription.setWidth("370px");
		textFieldDescription.setRequiredIndicatorVisible(true);
		textFieldDescription.setStyleName("v-textfield");
		horizontalLayout_3.addComponent(textFieldDescription);	
		horizontalLayout_3.setComponentAlignment(textFieldDescription,
				new Alignment(33));
		return horizontalLayout_3;
	}




	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_4() {
		// common part: create layout
		horizontalLayout_4 = new HorizontalLayout();
		horizontalLayout_4.setSizeFull();
		horizontalLayout_4.setHeight("40px");
		horizontalLayout_4.setMargin(false);
		
		// comboBoxType
		comboBoxType = new ComboBox<TypeDepenseEnum>();
		comboBoxType.setWidthUndefined();
		comboBoxType.setHeight("30px");
		comboBoxType.setRequiredIndicatorVisible(true);
		horizontalLayout_4.addComponent(comboBoxType);
		horizontalLayout_4.setComponentAlignment(comboBoxType,
				new Alignment(33));
		
		// textFieldValeur
		textFieldValeur = new TextField();
		textFieldValeur.setWidth("270px");
		textFieldValeur.setHeightUndefined();
		textFieldValeur.setRequiredIndicatorVisible(true);
		horizontalLayout_4.addComponent(textFieldValeur);
		horizontalLayout_4.setExpandRatio(textFieldValeur, 1.0f);
		horizontalLayout_4.setComponentAlignment(textFieldValeur,
				new Alignment(34));
		
		// label_3
		label_3 = new Label();
		label_3.setSizeUndefined();
		label_3.setValue("€");
		horizontalLayout_4.addComponent(label_3);
		horizontalLayout_4.setComponentAlignment(label_3, new Alignment(34));
		
		return horizontalLayout_4;
	}




	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_5() {
		// common part: create layout
		horizontalLayout_5 = new HorizontalLayout();
		horizontalLayout_5.setWidthUndefined();
		horizontalLayout_5.setHeight("40px");
		horizontalLayout_5.setMargin(false);
		
		// listSelectEtat
		comboBoxEtat = new ComboBox<EtatLigneDepenseEnum>();
		comboBoxEtat.setWidth("370px");
		comboBoxEtat.setHeight("30px");
		comboBoxEtat.setRequiredIndicatorVisible(true);
		horizontalLayout_5.addComponent(comboBoxEtat);
		horizontalLayout_5.setComponentAlignment(comboBoxEtat, new Alignment(
				33));
		
		return horizontalLayout_5;
	}




	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_6() {
		// common part: create layout
		horizontalLayout_6 = new HorizontalLayout();
		horizontalLayout_6.setWidthUndefined();
		horizontalLayout_6.setHeight("40px");
		horizontalLayout_6.setMargin(false);
		
		// checkBoxPeriodique
		checkBoxPeriodique = new CheckBox();
		checkBoxPeriodique.setStyleName("color2");
		checkBoxPeriodique.setCaption("CheckBox");
		checkBoxPeriodique.setSizeUndefined();
		horizontalLayout_6.addComponent(checkBoxPeriodique);
		horizontalLayout_6.setComponentAlignment(checkBoxPeriodique,
				new Alignment(33));
		
		return horizontalLayout_6;
	}




	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_7() {
		// common part: create layout
		horizontalLayout_7 = new HorizontalLayout();
		horizontalLayout_7.setWidthUndefined();
		horizontalLayout_7.setHeight("40px");
		horizontalLayout_7.setMargin(false);
		
		// buttonValider
		buttonValider = new Button();
		buttonValider.setStyleName("primary");
		buttonValider.setCaption("Valider et Fermer");
		buttonValider.setSizeUndefined();
		horizontalLayout_7.addComponent(buttonValider);
		horizontalLayout_7.setComponentAlignment(buttonValider, new Alignment(
				48));
		
		// buttonValiderContinuer
		buttonValiderContinuer = new Button();
		buttonValiderContinuer.setStyleName("friendly");
		buttonValiderContinuer.setCaption("Valider et Continuer");
		buttonValiderContinuer.setSizeUndefined();
		horizontalLayout_7.addComponent(buttonValiderContinuer);
		horizontalLayout_7.setComponentAlignment(buttonValiderContinuer,
				new Alignment(48));
		
		return horizontalLayout_7;
	}
}
